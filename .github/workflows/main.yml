name: Enhanced Siegel Strategy Monitor

on:
  schedule:
    # 每周一至周五的美国市场收盘后运行 (UTC时间 21:00，对应美东时间 16:00)
    - cron: '0 21 * * 1-5'
  workflow_dispatch:  # 允许手动触发

# 添加对 issues 的写入权限
permissions:
  contents: read
  issues: write

jobs:
  run-strategy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Create data and charts directories
        run: |
          mkdir -p data
          mkdir -p charts
          
      - name: Verify data directory permissions
        run: |
          # 确保数据目录存在并有写入权限
          ls -la data/
          touch data/test_file.txt
          rm data/test_file.txt
          echo "Data directory verified"
          
      - name: Run Enhanced Siegel Strategy
        env:
          FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
        run: |
          # 使用更详细的日志级别运行
          python run_strategy.py --no-email --force-download
          # 检查是否生成了必要的文件
          echo "检查生成的文件:"
          ls -la data/
          ls -la charts/
          
      - name: Debug log if failed
        if: failure()
        run: |
          echo "策略运行失败，显示日志:"
          if [ -f enhanced_siegel.log ]; then
            cat enhanced_siegel.log
          else
            echo "日志文件不存在"
          fi
          # 显示环境信息
          echo "Python版本:"
          python --version
          echo "Pandas版本:"
          pip show pandas
          
      - name: Upload charts as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: strategy-charts
          path: |
            charts/*.png
            charts/*.html
            
      - name: Read strategy report
        id: report
        run: |
          REPORT=$(tail -n 50 enhanced_siegel.log | grep -A 50 "信号报告" || echo "No report found")
          echo "report<<EOF" >> $GITHUB_ENV
          echo "$REPORT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # 提取信号类型和仓位
          SIGNAL_TYPE=$(echo "$REPORT" | grep "信号类型" | cut -d':' -f2 || echo "未知信号")
          POSITION=$(echo "$REPORT" | grep "建议仓位" | cut -d':' -f2 || echo "未知仓位")
          echo "signal_type=$SIGNAL_TYPE" >> $GITHUB_OUTPUT
          echo "position=$POSITION" >> $GITHUB_OUTPUT
          
      # 使用 GitHub Issues 作为通知方式，不需要邮箱配置
      - name: Create GitHub Issue with Strategy Report
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const date = new Date().toISOString().split('T')[0];
            const signalType = '${{ steps.report.outputs.signal_type }}' || '未知信号';
            const position = '${{ steps.report.outputs.position }}' || '未知仓位';
            
            const title = `【增强西格尔策略】信号更新 - ${signalType} ${position} (${date})`;
            const body = `## 增强西格尔策略监控报告
            
            ${process.env.report || '无报告内容'}
            
            ---
            
            *此报告由 GitHub Actions 自动生成于 ${new Date().toISOString()}*
            *查看 [策略图表](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) 获取更多详情*`;
            
            // 创建 Issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['strategy-signal', 'automated-report']
            });
      
      # 仅当设置了 EMAIL_RECIPIENT 时才发送邮件 
      - name: Send notification email
        if: ${{ env.EMAIL_RECIPIENT != '' }}
        continue-on-error: true  # 即使邮件发送失败，也继续执行后续步骤
        env:
          EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_SENDER || 'github-actions@github.com' }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: 【增强西格尔策略】信号更新 - ${{ steps.report.outputs.signal_type }} ${{ steps.report.outputs.position }}
          to: ${{ secrets.EMAIL_RECIPIENT }}
          from: GitHub Actions <${{ secrets.EMAIL_SENDER || 'github-actions@github.com' }}>
          body: |
            # 增强西格尔策略监控报告
            
            ${{ env.report }}
            
            ---
            
            此邮件由 GitHub Actions 自动发送，请勿回复。
            查看 GitHub 仓库获取更多详情：https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          html_body: |
            <h1>增强西格尔策略监控报告</h1>
            <pre>
            ${{ env.report }}
            </pre>
            <hr>
            <p>此邮件由 GitHub Actions 自动发送，请勿回复。</p>
            <p><a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">查看 GitHub 仓库获取更多详情</a></p>
